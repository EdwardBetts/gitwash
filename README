=========
 Gitwash
=========

A set of documents and an example repository to describe starting with
github and a git workflow.

Our idea is that many projects may have the same workflow, more or less.
Each project needs docs that have exact project-specific command lines
for use with git and github.

It seems a shame to type all this out for every project, when a lot of it is the same. 

Gitwash is one way of solving this problem.  

* You can build the gitwash documents directly to review your workflow.
* The documents designed for re-use in different projects are in the
  ``gitwash`` subdirectory.
* The project name in this repo is ``PROJECTNAME`` (e.g. ``IPython``),
  the repository name is ``REPONAME`` (e.g. ``ipython``) and the main
  github user (the user for the central github repository) is
  ``MAIN_GH_USER`` (e.g. ``ipython``).
* The script ``gitwash_dumper.py`` will checkout the gitwash repository,
  do a search and replace on these strings and replace them with the
  ones you want, and then output these into your own docs in a place
  that you choose.  An example command for *ipython* might be::

     gitwash_dumper.py docs/devel IPython ipython ipython

  to dump the search / replaced docs into the ``doc/devel/gitwash``
  directory.
* When defining your own project, you will need to fill out the links
  for your project in the file ``gitwash/git_links.txt`` - see the
  examples for ``nipy`` and ``ipython`` - just append under there with
  your equivalents.
* You might want to have a Makefile target to update gitwash
  automatically from the sources.  For example, in the *nipy* docs
  Makefile, we have::

     gitwash-update:
	python ../tools/gitwash_dumper.py devel/guidelines nipy

